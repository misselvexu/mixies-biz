<i:arg name="span" type="int" default="6"/>
<i:arg name="smallSpan" type="int" default="12" description="Defines the span for mobile devices"/>
<i:arg name="name" type="String" default=""/>
<i:arg name="fieldName" type="String" default="@name"/>
<i:arg name="value" type="sirius.db.mixing.types.MultiLanguageString"/>
<i:arg name="labelKey" type="String" default=""/>
<i:arg name="label" type="String" default="@i18n(labelKey)"/>
<i:arg name="forceLabel" type="boolean" default="false"/>
<i:arg name="helpKey" type="String" default=""/>
<i:arg name="help" type="String" default="@i18n(helpKey)"/>
<i:arg name="required" type="boolean" default="false"/>
<i:arg name="readonly" type="boolean" default="false"/>
<i:arg name="adminOnly" type="boolean" default="false"/>
<i:arg name="autofocus" type="boolean" default="false"/>
<i:arg name="type" type="String" default="text"/>
<i:arg name="id" type="String" default=""/>
<i:arg name="placeholder" type="String" default=""/>
<i:arg name="tabIndex" type="String" default=""/>

<i:pragma name="description" value="Renders a multi language text input field within a Wondergem template"/>

<i:local name="functionName" value="@('openMultiLanguageModal' + 'fieldName')"/>
<i:local name="modalName" value="@('mls-modal-' + fieldName)"/>

<div class="col-xs-@smallSpan col-md-@span form-group @user.signalFieldError(fieldName)">
    <i:if test="isFilled(label) || forceLabel">
        <label>
        <span class="@if (required) { input-required } @if (adminOnly) { admin-link }">
            @label
        </span>
        </label>
    </i:if>
    <div class="input-group" id="@('insert-point-' + fieldName)">
        <input @if(isFilled(id)) { id="@id" }
               type="@type"
               value="@value.fetchTextOrFallback()"
               class="form-control input-block-level"
               @if (isFilled(placeholder)) { placeholder="@placeholder" }
               @if (readonly) { readonly } @if (autofocus) { autofocus }
               @if (isFilled(tabIndex)) { tabindex="@tabIndex" }/>

        <span class="input-group-addon"><span class="fa fa-globe" onclick="@(functionName+ '()')"></span></span>
        <div id="@('hidden-inputs-' + fieldName)">
        </div>
    </div>

    <i:if test="isFilled(help)">
        <span class="help-block"><i:raw>@help</i:raw></span>
    </i:if>
    <i:if test="user.hasError(fieldName)">
        <span class="error-block help-block">@user.getFieldErrorMessage(fieldName)</span>
    </i:if>
</div>

<w:modal name="@modalName" title="@label">
    <w:modalBody>
        <div class="insert-point">

        </div>
        <w:modalFooter cancelKey="NLS.cancel">
            <button class="btn btn-primary ok-btn">@i18n("NLS.ok")</button>
        </w:modalFooter>
    </w:modalBody>
</w:modal>
<script>
    let $modal = $("#___modalName");
    let langObject = JSON.parse(<i:raw>'___value.getAsJSON()'</i:raw>);

    function getFlagEmoji(langCode) {
        //todo 'fallback'
        langCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397)); // todo: make IE compatible
    }

    // render modal body
    $(function () {
        let $insert = $modal.find('.insert-point');
        for (lang in langObject) {
            $insert.append($(document.createElement('span')).addClass('language-flag').text(getFlagEmoji(lang))); //todo picker /input on click
            $insert.append($('<input>', {
                'type': 'text',
                'data-lang': lang,
                'value': langObject[lang]
            }));
            $insert.append($(document.createElement('button')).text('-')); //todo implement remove row
            $insert.append($(document.createElement('br')));
        }
        $insert.append($(document.createElement('button')).text('+')); //todo implement add row
        updateHiddenFields()
    });

    function updateHiddenFields() {
        let $hiddenInputs = $('#hidden-inputs-___fieldName')
        $hiddenInputs.empty();
        $modal.find('input[data-lang]').each(function () {
            $hiddenInputs.append($(document.createElement('input')).attr('type', 'hidden').attr('name', '___fieldName').text($(this).data('lang') + '|||' + $(this).val()));
        });
    }

    // add/remove and fill hidden fields
    $modal.find('.ok-btn').off('click').click(function () {
        $modal.modal('hide');
        updateHiddenFields();
        //todo also update main field
    });

    function ___functionName () {
        $modal.modal('show');
    }
</script>
