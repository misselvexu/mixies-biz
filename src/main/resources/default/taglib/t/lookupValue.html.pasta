<i:arg name="name" type="String"/>
<i:arg name="value" type="sirius.biz.codelists.LookupValue"/>
<i:arg name="labelKey" type="String" default=""/>
<i:arg name="label" type="String" default="@i18n(labelKey)"/>
<i:arg name="helpKey" type="String" default=""/>
<i:arg name="help" type="String" default="@i18n(helpKey)"/>
<i:arg name="optional" type="boolean" default="false"/>
<i:arg name="readonly" type="boolean" default="false"/>
<i:arg name="id" type="String" default="@generateId('singleselect-%s')"/>
<i:arg name="class" type="String" default="" description="Lists additional CSS classes to apply to the field."/>

<i:pragma name="inline" value="true"/>
<i:pragma name="description" value="Renders a dropdown field for a LookupValue field"/>


<t:singleSelect name="@name" label="@label" help="@help" optional="@optional" readonly="@readonly" id="@id"
                allowCustomEntries="@value.acceptsCustomValues()" class="@class"
                suggestionUri="@apply('/system/lookuptable/autocomplete/%s/%s/%s', value.getTableName(), value.getDisplay(), value.getExtendedDisplay())">
    <i:block name="addon">
        <a class="btn btn-outline-secondary" id="@id-addon"><i class="fa fa-bolt"></i></a>
    </i:block>
    <i:block name="script">
        const helper = document.getElementById('___id-addon');
        helper.addEventListener('click', function () {
            new LookupTableInfo({
                tableName: '___value.getTableName()',
                labelFormat: '___value.getDisplay()',
                codeCallback: function (code, name) {
                    autocomplete.val({value: code, text: name});
                }
            });
        });
    </i:block>
    <option value="@value.getValue()" selected>
        @value.resolveDisplayString()
    </option>
</t:singleSelect>
