<i:arg type="sirius.biz.process.Process" name="process"/>
<i:arg type="Page" name="logs"/>

<i:invoke template="/templates/biz/process/process.html.pasta"
          process="process"
          page="logs">
    <i:block name="sidebar">
        <t:filterbox page="logs" baseUrl="@apply('/ps/%s/logs', process.getId())"/>
    </i:block>
    <i:block name="header-actions">
        <i:if test="process.getState() == sirius.biz.process.ProcessState.TERMINATED">
            <t:permission permission="permission-manage-processes">
                <t:dropdown labelKey="Process.persistencePeriod"
                            labelClass="d-none d-xl-inline"
                            icon="fa fa-archive" class="mr-2">
                    <i:for type="sirius.biz.process.PersistencePeriod"
                           var="period"
                           items="enumValues(sirius.biz.process.PersistencePeriod.class)">
                        <t:dropdownItem label="@period.toString()"
                                        class="@period == process.getPersistencePeriod() ? ' active' : ''"
                                        url="@apply('/ps/%s/updatePersistence?persistencePeriod=%s', process.getId(), period.name())"/>
                    </i:for>
                </t:dropdown>
            </t:permission>
            <t:dropdown labelKey="ProcessController.export"
                        icon="fa fa-file-export"
                        class="mr-2"
                        labelClass="d-none d-xl-inline">
                <i:for type="sirius.biz.jobs.batch.file.ExportFileType"
                       var="type"
                       items="enumValues(sirius.biz.jobs.batch.file.ExportFileType.class)">
                    <t:dropdownItem label="@type.toString()"
                                    url="@apply('/ps/%s/export/%s', process.getId(), type.name())"/>
                </i:for>
            </t:dropdown>
        </i:if>
    </i:block>

    <t:searchHeader page="logs" baseUrl="@apply('/ps/%s/logs', process.getId())"/>

    <t:emptyCheck data="logs">
        <div class="card mb-4">
            <div class="card-body">
                <table class="table">
                    <thead>
                    <tr>
                        <th>
                            @i18n("ProcessLog.message")
                        </th>
                        <th class="text-right">
                            @i18n("ProcessLog.timestamp")
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    <i:for type="sirius.biz.process.logs.ProcessLog" var="log" items="logs.getItems()">
                        <tr>
                            <td class="left-border border-sirius-@log.getRowColor()">
                                <div class="whitespace-pre-wrap overflow-hidden text-monospace text-small">@log.getMessage()</div>
                                <div>
                                    <i:for type="sirius.biz.process.logs.ProcessLogAction" var="action"
                                           items="log.getActions()">
                                        <a href="@action.getUri()?returnUrl=@urlEncode(apply('/ps/%s', process.getId()))"
                                           class="link link-inline"><i class="fa @action.getIcon()"></i>
                                            @action.getLabel()</a>
                                    </i:for>
                                </div>
                            </td>
                            <td class="text-right">
                                <div class="cycle link text-small whitespace-no-wrap" data-cycle="@log.getNode()">
                                    @log.getTimestampAsString()
                                </div>
                            </td>
                        </tr>
                    </i:for>
                    </tbody>
                </table>
            </div>
        </div>
    </t:emptyCheck>

    <t:pagination page="logs" baseUrl="@apply('/ps/%s/logs', process.getId())"/>
</i:invoke>
